# vers√£o que garante n√£o haver votos duplicados, mas a capta√ß√£o √© feita via nome completo
# Lista de projetos
projetos = []
# Conjunto para armazenar quem j√° votou
votantes = set()

def input_obrigatorio(mensagem):
    while True:
        valor = input(mensagem).strip()
        if valor == "":
            print("‚ùå Este campo √© obrigat√≥rio.")
        else:
            return valor

def cadastrar_projeto():
    print("\nüìå Cadastro de novo projeto")
    nome = input_obrigatorio("Nome do projeto: ")
    turma = input_obrigatorio("Turma (ex: 3¬∫A): ")

    turno = ""
    while turno not in ["Manh√£", "Tarde", "Noite"]:
        turno = input("Turno (Manh√£/Tarde/Noite): ").strip().capitalize()
        if turno not in ["Manh√£", "Tarde", "Noite"]:
            print("‚ùå Turno inv√°lido. Digite Manh√£, Tarde ou Noite.")

    alunos = []
    print("\nDigite os nomes dos alunos:")
    for i in range(6):
        while True:
            aluno = input(f"Aluno {i+1}: ").strip()
            if i < 4:
                if aluno == "":
                    print("‚ùå Este campo √© obrigat√≥rio.")
                else:
                    alunos.append(aluno)
                    break
            else:
                alunos.append(aluno if aluno != "" else "‚Äî")
                break

    descricao = input_obrigatorio("\nDescri√ß√£o do projeto: ")

    projeto = {
        "nome": nome,
        "turma": turma,
        "turno": turno,
        "alunos": alunos,
        "descricao": descricao,
        "votos": 0
    }

    projetos.append(projeto)
    print(f"\n‚úÖ Projeto '{nome}' cadastrado com sucesso!")

def exibir_projetos():
    if not projetos:
        print("\n‚ö†Ô∏è Nenhum projeto cadastrado.")
        return
    print("\nüìã Projetos dispon√≠veis:")
    for i, p in enumerate(projetos, start=1):
        print(f"\n{i}. {p['nome']} ({p['turma']} - {p['turno']})")
        print(f"   Alunos: {', '.join(p['alunos'])}")
        print(f"   Descri√ß√£o: {p['descricao']}")
        print(f"   Votos: {p['votos']}")

def votar():
    if not projetos:
        print("\n‚ö†Ô∏è Nenhum projeto dispon√≠vel para votar.")
        return

    nome_votante = input_obrigatorio("\nDigite seu nome completo para votar: ")
    if nome_votante in votantes:
        print("‚ùå Voc√™ j√° votou. Cada pessoa s√≥ pode votar uma vez.")
        return

    exibir_projetos()
    try:
        escolha = int(input("\nDigite o n√∫mero do projeto que deseja votar: "))
        if 1 <= escolha <= len(projetos):
            projetos[escolha - 1]["votos"] += 1
            votantes.add(nome_votante)
            print(f"‚úÖ Voto registrado para: {projetos[escolha - 1]['nome']}")
        else:
            print("‚ùå N√∫mero inv√°lido.")
    except ValueError:
        print("‚ùå Entrada inv√°lida. Digite um n√∫mero.")

def mostrar_resultados():
    if not projetos:
        print("\n‚ö†Ô∏è Nenhum projeto para mostrar resultados.")
        return
    print("\nüìä Resultados da vota√ß√£o:")
    for p in projetos:
        print(f"{p['nome']} ({p['turma']} - {p['turno']}): {p['votos']} voto(s)")

# Loop principal
def menu():
    while True:
        print("\n--- MENU ---")
        print("1. Cadastrar novo projeto")
        print("2. Exibir projetos")
        print("3. Votar em projeto")
        print("4. Mostrar resultados")
        print("5. Sair")

        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            cadastrar_projeto()
        elif opcao == "2":
            exibir_projetos()
        elif opcao == "3":
            votar()
        elif opcao == "4":
            mostrar_resultados()
        elif opcao == "5":
            print("üëã Encerrando o aplicativo. At√© mais!")
            break
        else:
            print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")

# Iniciar o programa
menu()
